Given an array Arr of size N containing positive integers. Count number of smaller elements on right side of each array.

Example 1:

Input:
N = 7
Arr[] = {12, 1, 2, 3, 0, 11, 4}
Output: 6 1 1 1 0 1 0
Explanation: There are 6 elements right
after 12. There are 1 element right after
1. And so on.
Example 2:

Input:
N = 5
Arr[] = {1, 2, 3, 4, 5}
Output: 0 0 0 0 0
Explanation: There are 0 elements right
after 1. There are 0 elements right after
2. And so on.


Method 1: Naive Approach
---------------------------
int[] constructLowerArray(int[] arr, int n) {
        // code here
        int res[]=new int[n];
        
        for(int i=0;i<n;i++)
        {
            int count=0;
            for(int j=i+1;j<n;j++)
            {
                if(arr[i]>arr[j])
                    count++;
            }
            res[i]=count;
            //System.out.print(count+" ");
        }
        
        return res;
 }
 
 Time Complexity : O(n2)
 Auxilary Space : O(1)
 
 Method 2: Effifient approach (using merge sort)
 ------------------------------------------------
